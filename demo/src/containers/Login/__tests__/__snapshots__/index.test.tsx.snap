// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Login /> render() <Login /> should be rendering 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Login
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
    location={
      Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      }
    }
    match={
      Object {
        "isExact": true,
        "params": 1,
        "path": "login",
        "url": "login",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <styled.form>
          <styled.h1>
            <span>
              Sign In
            </span>
          </styled.h1>
          <styled.input
            name="username"
            onChange={[Function]}
            placeholder="Phone number"
            value=""
          />
          <styled.input
            name="extension"
            onChange={[Function]}
            placeholder="Extension"
            value=""
          />
          <styled.input
            name="password"
            onChange={[Function]}
            placeholder="Password"
            type="password"
            value=""
          />
          <styled.button
            disabled={false}
            onClick={[Function]}
          >
            Login
          </styled.button>
          <styled.div>
            <ul />
          </styled.div>
        </styled.form>,
        <Download />,
        <LoginVersionStatus />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.h1>
              <span>
                Sign In
              </span>
            </styled.h1>,
            <styled.input
              name="username"
              onChange={[Function]}
              placeholder="Phone number"
              value=""
            />,
            <styled.input
              name="extension"
              onChange={[Function]}
              placeholder="Extension"
              value=""
            />,
            <styled.input
              name="password"
              onChange={[Function]}
              placeholder="Password"
              type="password"
              value=""
            />,
            <styled.button
              disabled={false}
              onClick={[Function]}
            >
              Login
            </styled.button>,
            <styled.div>
              <ul />
            </styled.div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <span>
                Sign In
              </span>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Sign In",
              },
              "ref": null,
              "rendered": "Sign In",
              "type": "span",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "name": "username",
              "onChange": [Function],
              "placeholder": "Phone number",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "name": "extension",
              "onChange": [Function],
              "placeholder": "Extension",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "name": "password",
              "onChange": [Function],
              "placeholder": "Password",
              "type": "password",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Login",
              "disabled": false,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Login",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <ul />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [],
              },
              "ref": null,
              "rendered": Array [],
              "type": "ul",
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <styled.form>
            <styled.h1>
              <span>
                Sign In
              </span>
            </styled.h1>
            <styled.input
              name="username"
              onChange={[Function]}
              placeholder="Phone number"
              value=""
            />
            <styled.input
              name="extension"
              onChange={[Function]}
              placeholder="Extension"
              value=""
            />
            <styled.input
              name="password"
              onChange={[Function]}
              placeholder="Password"
              type="password"
              value=""
            />
            <styled.button
              disabled={false}
              onClick={[Function]}
            >
              Login
            </styled.button>
            <styled.div>
              <ul />
            </styled.div>
          </styled.form>,
          <Download />,
          <LoginVersionStatus />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.h1>
                <span>
                  Sign In
                </span>
              </styled.h1>,
              <styled.input
                name="username"
                onChange={[Function]}
                placeholder="Phone number"
                value=""
              />,
              <styled.input
                name="extension"
                onChange={[Function]}
                placeholder="Extension"
                value=""
              />,
              <styled.input
                name="password"
                onChange={[Function]}
                placeholder="Password"
                type="password"
                value=""
              />,
              <styled.button
                disabled={false}
                onClick={[Function]}
              >
                Login
              </styled.button>,
              <styled.div>
                <ul />
              </styled.div>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <span>
                  Sign In
                </span>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Sign In",
                },
                "ref": null,
                "rendered": "Sign In",
                "type": "span",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "name": "username",
                "onChange": [Function],
                "placeholder": "Phone number",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "name": "extension",
                "onChange": [Function],
                "placeholder": "Extension",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "name": "password",
                "onChange": [Function],
                "placeholder": "Password",
                "type": "password",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Login",
                "disabled": false,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Login",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <ul />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [],
                },
                "ref": null,
                "rendered": Array [],
                "type": "ul",
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
