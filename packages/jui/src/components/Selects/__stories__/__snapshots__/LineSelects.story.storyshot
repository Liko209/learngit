// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Components/Selects LineSelect: Components/Selects LineSelect 1`] = `
.c4 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

.c5 {
  display: inline-block;
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
  pointer-events: none;
  font-size: 24px;
}

.c6 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.c6.c6 {
  padding: 0;
}

.c6.c6 .list-item-primary {
  color: #212121;
  font-size: 0.875rem;
  font-weight: 400;
  font-family: 'Roboto','Helvetica','Arial',sans-serif;
  line-height: 20px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  word-break: break-word;
}

.c6.c6 .list-item-secondary {
  color: #757575;
  font-size: 0.75rem;
  font-weight: 400;
  font-family: 'Roboto','Helvetica','Arial',sans-serif;
  line-height: 16px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  word-break: break-word;
}

.c6.c6.multiline {
  margin: 0;
}

.c1.c1 {
  margin: 0 0 16px 0;
}

.c1.c1 label {
  color: #757575;
  font-size: 0.75rem;
  font-weight: 500;
  font-family: 'Roboto','Helvetica','Arial',sans-serif;
  line-height: 16px;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c1.c1 input::-webkit-input-placeholder {
  color: #757575;
  font-size: 0.875rem;
  font-weight: 400;
  font-family: 'Roboto','Helvetica','Arial',sans-serif;
  line-height: 20px;
}

.c1.c1 input::-moz-placeholder {
  color: #757575;
  font-size: 0.875rem;
  font-weight: 400;
  font-family: 'Roboto','Helvetica','Arial',sans-serif;
  line-height: 20px;
}

.c1.c1 input:-ms-input-placeholder {
  color: #757575;
  font-size: 0.875rem;
  font-weight: 400;
  font-family: 'Roboto','Helvetica','Arial',sans-serif;
  line-height: 20px;
}

.c1.c1 input::placeholder {
  color: #757575;
  font-size: 0.875rem;
  font-weight: 400;
  font-family: 'Roboto','Helvetica','Arial',sans-serif;
  line-height: 20px;
}

.c1.c1 .form-label-focused:not(.form-label-error) {
  color: #0684bd;
}

.c1 .underline:after {
  border-bottom-color: #0684bd;
}

.c6 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.c6.c6 {
  padding: 0;
}

.c6.c6 .list-item-primary {
  display: block;
  color: #212121;
  font-size: 0.875rem;
  font-weight: 400;
  font-family: 'Roboto','Helvetica','Arial',sans-serif;
  line-height: 20px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  word-break: break-word;
}

.c6.c6 .list-item-secondary {
  display: block;
  color: #757575;
  font-size: 0.75rem;
  font-weight: 400;
  font-family: 'Roboto','Helvetica','Arial',sans-serif;
  line-height: 16px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  word-break: break-word;
}

.c6.c6.multiline {
  margin: 0;
}

.c0.c0 {
  width: 100%;
}

.c0.c0 .icon {
  color: #212121;
}

.c0.c0 .selectMenu {
  font-size: 0.875rem;
  font-weight: 400;
  font-family: 'Roboto','Helvetica','Arial',sans-serif;
  line-height: 20px;
  color: #212121;
}

.c2.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c3 {
  min-width: unset;
}

<div
  style={
    Object {
      "textAlign": "center",
    }
  }
>
  <div>
    <div
      style={
        Object {
          "padding": "0 30%",
        }
      }
    >
      <div
        className="MuiFormControl-root MuiTextField-root c0 c1"
        onKeyDown={[Function]}
        style={
          Object {
            "textAlign": "left",
            "width": "200px",
          }
        }
      >
        <label
          className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
          data-shrink={true}
        >
          select
        </label>
        <div
          className="MuiInputBase-root MuiInput-root MuiInput-underline underline MuiInputBase-formControl MuiInput-formControl"
          onClick={[Function]}
        >
          <div
            aria-haspopup="true"
            aria-pressed="false"
            className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu selectMenu MuiInputBase-input MuiInput-input MuiInputBase-inputSelect"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            role="button"
            tabIndex={0}
          >
            <span
              dangerouslySetInnerHTML={
                Object {
                  "__html": "&#8203;",
                }
              }
            />
          </div>
          <input
            type="hidden"
            value=""
          />
          <svg
            aria-hidden="true"
            className="MuiSvgIcon-root MuiSelect-icon icon"
            focusable="false"
            role="presentation"
            viewBox="0 0 24 24"
          >
            <path
              d="M7 10l5 5 5-5z"
            />
          </svg>
        </div>
      </div>
    </div>
    <div
      style={
        Object {
          "padding": "0 30%",
        }
      }
    >
      <div
        className="MuiFormControl-root MuiTextField-root c0 c1"
        onKeyDown={[Function]}
        style={
          Object {
            "textAlign": "left",
            "width": "200px",
          }
        }
      >
        <label
          className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiFormLabel-filled"
          data-shrink={true}
        >
          RegionLabel
        </label>
        <div
          className="MuiInputBase-root MuiInput-root MuiInput-underline underline MuiInputBase-formControl MuiInput-formControl"
          onClick={[Function]}
        >
          <div
            aria-haspopup="true"
            aria-pressed="false"
            className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu selectMenu MuiInputBase-input MuiInput-input MuiInputBase-inputSelect"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            role="button"
            tabIndex={0}
          >
            <div
              className="c2"
            >
              <div
                className="MuiListItemIcon-root c3"
              >
                <span
                  className="  icon c4"
                >
                  <svg
                    className="c5"
                    role="img"
                    size="large"
                  >
                    <use
                      href="#undefined"
                      xlinkHref="#undefined"
                    />
                  </svg>
                </span>
              </div>
              <div
                className="MuiListItemText-root c6"
              >
                <span
                  className="MuiTypography-root MuiListItemText-primary list-item-primary MuiTypography-body1"
                >
                  China (+86)
                </span>
              </div>
            </div>
          </div>
          <input
            type="hidden"
            value="China"
          />
          <svg
            aria-hidden="true"
            className="MuiSvgIcon-root MuiSelect-icon icon"
            focusable="false"
            role="presentation"
            viewBox="0 0 24 24"
          >
            <path
              d="M7 10l5 5 5-5z"
            />
          </svg>
        </div>
      </div>
    </div>
  </div>
</div>
`;
