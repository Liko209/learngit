// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`StreamView render() should render empty view 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <StreamView
    atBottom={[MockFunction atBottom]}
    enableNewMessageSeparatorHandler={[MockFunction enableNewMessageSeparatorHandler]}
    items={Array []}
    markAsRead={[MockFunction markAsRead]}
    postIds={Array []}
    setRowVisible={[MockFunction setRowVisible]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": null,
    },
    "ref": null,
    "rendered": null,
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": null,
      },
      "ref": null,
      "rendered": null,
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`StreamView render() should render posts and separators 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <StreamView
    atBottom={[MockFunction atBottom]}
    enableNewMessageSeparatorHandler={[MockFunction enableNewMessageSeparatorHandler]}
    items={
      Array [
        Object {
          "type": "POST",
          "value": 1,
        },
        Object {
          "type": "NEW_MSG_SEPARATOR",
          "value": null,
        },
        Object {
          "type": "POST",
          "value": 2,
        },
        Object {
          "type": "POST",
          "value": 3,
        },
        Object {
          "type": "POST",
          "value": 4,
        },
      ]
    }
    markAsRead={[MockFunction markAsRead]}
    postIds={
      Array [
        1,
        2,
        3,
        4,
      ]
    }
    setRowVisible={[MockFunction setRowVisible]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Container
          id={1}
        />,
        <Container
          value="New messages"
        />,
        <Container
          id={2}
        />,
        <Container
          id={3}
        />,
        <Container
          id={4}
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "1",
        "nodeType": "class",
        "props": Object {
          "id": 1,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "null",
        "nodeType": "class",
        "props": Object {
          "value": "New messages",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "2",
        "nodeType": "class",
        "props": Object {
          "id": 2,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "3",
        "nodeType": "class",
        "props": Object {
          "id": 3,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "4",
        "nodeType": "class",
        "props": Object {
          "id": 4,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Container
            id={1}
          />,
          <Container
            value="New messages"
          />,
          <Container
            id={2}
          />,
          <Container
            id={3}
          />,
          <Container
            id={4}
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "class",
          "props": Object {
            "id": 1,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "null",
          "nodeType": "class",
          "props": Object {
            "value": "New messages",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "2",
          "nodeType": "class",
          "props": Object {
            "id": 2,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "3",
          "nodeType": "class",
          "props": Object {
            "id": 3,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "4",
          "nodeType": "class",
          "props": Object {
            "id": 4,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
