<?xml version='1.0'?>
<ns2:test-suite xmlns:ns2='urn:model.allure.qatools.yandex.ru' start='1563856484671' stop='1563856596754'>
    <name>support multiple call</name>
    <title>support multiple call</title>
    <test-cases>
        <test-case start='1563856524424' status='failed' stop='1563856596636'>
            <name>[JPT-1970][P1][Yilia Hong] Make call success when there is 8 call</name>
            <title>[JPT-1970][P1][Yilia Hong] Make call success when there is 8 call</title>
            <labels>
                <label name='severity' value='critical'/>
            </labels>
            <parameters/>
            <steps>
                <step start='1563856524426' status='passed' stop='1563856524426'>
                    <name>Get nodes from puppeteer hub: [{"nodeID":"node1","node":{"nodeID":"node1","connectionType":"local","isVM":true,"sessionMode":"simple","maxConcurrentSessions":1,"networkSimulator":false,"puppeteerWSUrl":"ws://localhost:3001","headless":false,"host":"localhost","port":"3001"}},{"nodeID":"node2","node":{"nodeID":"node2","connectionType":"local","isVM":true,"sessionMode":"simple","maxConcurrentSessions":1,"networkSimulator":false,"puppeteerWSUrl":"ws://localhost:3001","headless":false,"host":"localhost","port":"3001"}},{"nodeID":"node3","node":{"nodeID":"node3","connectionType":"local","isVM":true,"sessionMode":"simple","maxConcurrentSessions":1,"networkSimulator":false,"puppeteerWSUrl":"ws://localhost:3001","headless":false,"host":"localhost","port":"3001"}}]</name>
                    <title>Get nodes from puppeteer hub: [{"nodeID":"node1","node":{"nodeID":"node1","connectionType":"local","isVM":true,"sessionMode":"simple","maxConcurrentSessions":1,"networkSimulator":false,"puppeteerWSUrl":"ws://localhost:3001","headless":false,"host":"localhost","port":"3001"}},{"nodeID":"node2","node":{"nodeID":"node2","connectionType":"local","isVM":true,"sessionMode":"simple","maxConcurrentSessions":1,"networkSimulator":false,"puppeteerWSUrl":"ws://localhost:3001","headless":false,"host":"localhost","port":"3001"}},{"nodeID":"node3","node":{"nodeID":"node3","connectionType":"local","isVM":true,"sessionMode":"simple","maxConcurrentSessions":1,"networkSimulator":false,"puppeteerWSUrl":"ws://localhost:3001","headless":false,"host":"localhost","port":"3001"}}]</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563856524428' status='passed' stop='1563856524433'>
                    <name>Given party1 is registered</name>
                    <title>Given party1 is registered</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563856524433' status='passed' stop='1563856524437'>
                    <name>Given party2 is registered</name>
                    <title>Given party2 is registered</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563856526437' status='passed' stop='1563856526533'>
                    <name>When make call from party1 to party2</name>
                    <title>When make call from party1 to party2</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563856526533' status='passed' stop='1563856527195'>
                    <name>Then party1 enter connected state</name>
                    <title>Then party1 enter connected state</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563856527195' status='passed' stop='1563856527263'>
                    <name>Then party2 receive incoming call</name>
                    <title>Then party2 receive incoming call</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563856528264' status='passed' stop='1563856533306'>
                    <name>When party2 answer call</name>
                    <title>When party2 answer call</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563856533306' status='passed' stop='1563856533323'>
                    <name>Then party2 enter connected state</name>
                    <title>Then party2 enter connected state</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563856536328' status='passed' stop='1563856536451'>
                    <name>When make call from party1 to party2</name>
                    <title>When make call from party1 to party2</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563856536451' status='passed' stop='1563856536948'>
                    <name>Then party1 enter connected state</name>
                    <title>Then party1 enter connected state</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563856536948' status='passed' stop='1563856536991'>
                    <name>Then party2 receive incoming call</name>
                    <title>Then party2 receive incoming call</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563856537995' status='passed' stop='1563856543020'>
                    <name>When party2 answer call</name>
                    <title>When party2 answer call</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563856543020' status='passed' stop='1563856543023'>
                    <name>Then party2 enter connected state</name>
                    <title>Then party2 enter connected state</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563856546026' status='passed' stop='1563856546116'>
                    <name>When make call from party1 to party2</name>
                    <title>When make call from party1 to party2</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563856546116' status='passed' stop='1563856546634'>
                    <name>Then party1 enter connected state</name>
                    <title>Then party1 enter connected state</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563856546634' status='passed' stop='1563856546683'>
                    <name>Then party2 receive incoming call</name>
                    <title>Then party2 receive incoming call</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563856547686' status='passed' stop='1563856552702'>
                    <name>When party2 answer call</name>
                    <title>When party2 answer call</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563856552702' status='passed' stop='1563856552705'>
                    <name>Then party2 enter connected state</name>
                    <title>Then party2 enter connected state</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563856553706' status='passed' stop='1563856553712'>
                    <name>Check party1 call list item = 3</name>
                    <title>Check party1 call list item = 3</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563856554717' status='passed' stop='1563856554758'>
                    <name>When party1 mute call</name>
                    <title>When party1 mute call</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563856554758' status='passed' stop='1563856554774'>
                    <name>When party2 play out tone with frequency 440</name>
                    <title>When party2 play out tone with frequency 440</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563856554774' status='passed' stop='1563856567823'>
                    <name>check party1 tone frequency</name>
                    <title>check party1 tone frequency</title>
                    <attachments/>
                    <steps>
                        <step start='1563856554775' status='passed' stop='1563856555783'>
                            <name>Then party1 start local recording</name>
                            <title>Then party1 start local recording</title>
                            <attachments/>
                            <steps/>
                        </step>
                        <step start='1563856565788' status='passed' stop='1563856566794'>
                            <name>When party1 stop local recording</name>
                            <title>When party1 stop local recording</title>
                            <attachments/>
                            <steps/>
                        </step>
                    </steps>
                </step>
                <step start='1563856567824' status='passed' stop='1563856567825'>
                    <name>check frequency 440 with stability 9 to be true</name>
                    <title>check frequency 440 with stability 9 to be true</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563856567825' status='passed' stop='1563856567835'>
                    <name>When party2 stop playing tone</name>
                    <title>When party2 stop playing tone</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563856567835' status='passed' stop='1563856567869'>
                    <name>When party1 unmute call</name>
                    <title>When party1 unmute call</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563856568874' status='passed' stop='1563856568916'>
                    <name>When party2 mute call</name>
                    <title>When party2 mute call</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563856568916' status='passed' stop='1563856568929'>
                    <name>When party1 play out tone with frequency 660</name>
                    <title>When party1 play out tone with frequency 660</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563856568929' status='passed' stop='1563856581977'>
                    <name>check party2 tone frequency</name>
                    <title>check party2 tone frequency</title>
                    <attachments/>
                    <steps>
                        <step start='1563856568929' status='passed' stop='1563856569936'>
                            <name>Then party2 start local recording</name>
                            <title>Then party2 start local recording</title>
                            <attachments/>
                            <steps/>
                        </step>
                        <step start='1563856579941' status='passed' stop='1563856580948'>
                            <name>When party2 stop local recording</name>
                            <title>When party2 stop local recording</title>
                            <attachments/>
                            <steps/>
                        </step>
                    </steps>
                </step>
                <step start='1563856581977' status='passed' stop='1563856581978'>
                    <name>check frequency 660 with stability 9 to be true</name>
                    <title>check frequency 660 with stability 9 to be true</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563856581978' status='passed' stop='1563856581989'>
                    <name>When party1 stop playing tone</name>
                    <title>When party1 stop playing tone</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563856581989' status='passed' stop='1563856582025'>
                    <name>When party2 unmute call</name>
                    <title>When party2 unmute call</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563856583029' status='passed' stop='1563856583109'>
                    <name>When party2 end call</name>
                    <title>When party2 end call</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563856584112' status='passed' stop='1563856584164'>
                    <name>When party2 end call</name>
                    <title>When party2 end call</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563856585169' status='passed' stop='1563856585221'>
                    <name>When party2 end call</name>
                    <title>When party2 end call</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563856586227' status='passed' stop='1563856591460'>
                    <name>check party1 log</name>
                    <title>check party1 log</title>
                    <attachments>
                        <attachment title='party1-8c0734b8-3b76-3ab1-8909-86476efc5fb6.txt' source='d32570c3-5282-4db6-a725-837c1da3a1e5-attachment.txt' type='text/plain' size='229991'/>
                    </attachments>
                    <steps/>
                </step>
                <step start='1563856591460' status='failed' stop='1563856596595'>
                    <name>check party1 log</name>
                    <title>check party1 log</title>
                    <attachments>
                        <attachment title='party1-8c0734b8-3b76-3ab1-8909-86476efc5fb6.txt' source='f6390a2d-df09-406b-9425-7acc07a0f2e8-attachment.txt' type='text/plain' size='229991'/>
                        <attachment title='party1-8c0734b8-3b76-3ab1-8909-86476efc5fb6.txt' source='c8c40372-07ff-4249-a0ba-a66d2d480d23-attachment.txt' type='text/plain' size='229991'/>
                        <attachment title='party2-927a1a21-3830-3aee-b9d9-ec4b6ae1374f.txt' source='6f471c82-7c8c-4e96-867e-a70b4cf1cdf5-attachment.txt' type='text/plain' size='236733'/>
                        <attachment title='party3-c494ec4b-384d-36fa-a376-e622f1558f8d.txt' source='86e55676-c975-4756-9c70-9b5de33f7e17-attachment.txt' type='text/plain' size='62425'/>
                    </attachments>
                    <steps/>
                </step>
            </steps>
            <attachments/>
            <failure>
                <message>Error: expect(received).toBe(expected) // Object.is equality
                
                Expected: true
                Received: false</message>
                <stack-trace>Error: expect(received).toBe(expected) // Object.is equality
                
                Expected: true
                Received: false
                    at StepHelper.&lt;anonymous> (/Users/jayson.zhang/gitLab_workspace/Fiji-01/tests/telephony-sdk-test/helper/StepHelper.ts:816:22)
                    at step (/Users/jayson.zhang/gitLab_workspace/Fiji-01/tests/telephony-sdk-test/helper/StepHelper.ts:37:23)
                    at Object.next (/Users/jayson.zhang/gitLab_workspace/Fiji-01/tests/telephony-sdk-test/helper/StepHelper.ts:18:53)
                    at fulfilled (/Users/jayson.zhang/gitLab_workspace/Fiji-01/tests/telephony-sdk-test/helper/StepHelper.ts:9:58)
                    at process._tickCallback (internal/process/next_tick.js:68:7)</stack-trace>
            </failure>
            <description type='text'>support multiple call</description>
        </test-case>
        <test-case start='1563856596636' status='undefined' stop='1563856596636'>
            <name>[JPT-1971][P1][Yilia Hong] Make call failed when there are 9 calls</name>
            <title>[JPT-1971][P1][Yilia Hong] Make call failed when there are 9 calls</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
            <failure>
                <message>This test was disabled</message>
                <stack-trace>undefined</stack-trace>
            </failure>
        </test-case>
        <test-case start='1563856596636' status='undefined' stop='1563856596636'>
            <name>[JPT-1972][P1][Yilia Hong] Can receive incoming call when there is 8 call</name>
            <title>[JPT-1972][P1][Yilia Hong] Can receive incoming call when there is 8 call</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
            <failure>
                <message>This test was disabled</message>
                <stack-trace>undefined</stack-trace>
            </failure>
        </test-case>
        <test-case start='1563856596636' status='undefined' stop='1563856596636'>
            <name>[JPT-1971][P1][Yilia Hong] Can not receive incoming call when there are 9 calls</name>
            <title>[JPT-1971][P1][Yilia Hong] Can not receive incoming call when there are 9 calls</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
            <failure>
                <message>This test was disabled</message>
                <stack-trace>undefined</stack-trace>
            </failure>
        </test-case>
    </test-cases>
</ns2:test-suite>