<?xml version='1.0'?>
<ns2:test-suite xmlns:ns2='urn:model.allure.qatools.yandex.ru' start='1563857744338' stop='1563857855901'>
    <name>support multiple call</name>
    <title>support multiple call</title>
    <test-cases>
        <test-case start='1563857782404' status='failed' stop='1563857855739'>
            <name>[JPT-1970][P1][Yilia Hong] Make call success when there is 8 call</name>
            <title>[JPT-1970][P1][Yilia Hong] Make call success when there is 8 call</title>
            <labels>
                <label name='severity' value='critical'/>
            </labels>
            <parameters/>
            <steps>
                <step start='1563857782406' status='passed' stop='1563857782406'>
                    <name>Get nodes from puppeteer hub: [{"nodeID":"node1","node":{"nodeID":"node1","connectionType":"local","isVM":true,"sessionMode":"simple","maxConcurrentSessions":1,"networkSimulator":false,"puppeteerWSUrl":"ws://localhost:3001","headless":false,"host":"localhost","port":"3001"}},{"nodeID":"node2","node":{"nodeID":"node2","connectionType":"local","isVM":true,"sessionMode":"simple","maxConcurrentSessions":1,"networkSimulator":false,"puppeteerWSUrl":"ws://localhost:3001","headless":false,"host":"localhost","port":"3001"}},{"nodeID":"node3","node":{"nodeID":"node3","connectionType":"local","isVM":true,"sessionMode":"simple","maxConcurrentSessions":1,"networkSimulator":false,"puppeteerWSUrl":"ws://localhost:3001","headless":false,"host":"localhost","port":"3001"}}]</name>
                    <title>Get nodes from puppeteer hub: [{"nodeID":"node1","node":{"nodeID":"node1","connectionType":"local","isVM":true,"sessionMode":"simple","maxConcurrentSessions":1,"networkSimulator":false,"puppeteerWSUrl":"ws://localhost:3001","headless":false,"host":"localhost","port":"3001"}},{"nodeID":"node2","node":{"nodeID":"node2","connectionType":"local","isVM":true,"sessionMode":"simple","maxConcurrentSessions":1,"networkSimulator":false,"puppeteerWSUrl":"ws://localhost:3001","headless":false,"host":"localhost","port":"3001"}},{"nodeID":"node3","node":{"nodeID":"node3","connectionType":"local","isVM":true,"sessionMode":"simple","maxConcurrentSessions":1,"networkSimulator":false,"puppeteerWSUrl":"ws://localhost:3001","headless":false,"host":"localhost","port":"3001"}}]</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563857782407' status='passed' stop='1563857782468'>
                    <name>Given party1 is registered</name>
                    <title>Given party1 is registered</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563857782468' status='passed' stop='1563857782471'>
                    <name>Given party2 is registered</name>
                    <title>Given party2 is registered</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563857784476' status='passed' stop='1563857784578'>
                    <name>When make call from party1 to party2</name>
                    <title>When make call from party1 to party2</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563857784578' status='passed' stop='1563857785261'>
                    <name>Then party1 enter connected state</name>
                    <title>Then party1 enter connected state</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563857785261' status='passed' stop='1563857785340'>
                    <name>Then party2 receive incoming call</name>
                    <title>Then party2 receive incoming call</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563857786345' status='passed' stop='1563857791399'>
                    <name>When party2 answer call</name>
                    <title>When party2 answer call</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563857791399' status='passed' stop='1563857791403'>
                    <name>Then party2 enter connected state</name>
                    <title>Then party2 enter connected state</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563857794407' status='passed' stop='1563857794548'>
                    <name>When make call from party1 to party2</name>
                    <title>When make call from party1 to party2</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563857794548' status='passed' stop='1563857795059'>
                    <name>Then party1 enter connected state</name>
                    <title>Then party1 enter connected state</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563857795060' status='passed' stop='1563857795114'>
                    <name>Then party2 receive incoming call</name>
                    <title>Then party2 receive incoming call</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563857796119' status='passed' stop='1563857801144'>
                    <name>When party2 answer call</name>
                    <title>When party2 answer call</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563857801144' status='passed' stop='1563857801148'>
                    <name>Then party2 enter connected state</name>
                    <title>Then party2 enter connected state</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563857804149' status='passed' stop='1563857804345'>
                    <name>When make call from party1 to party2</name>
                    <title>When make call from party1 to party2</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563857804345' status='passed' stop='1563857804854'>
                    <name>Then party1 enter connected state</name>
                    <title>Then party1 enter connected state</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563857804854' status='passed' stop='1563857804927'>
                    <name>Then party2 receive incoming call</name>
                    <title>Then party2 receive incoming call</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563857805932' status='passed' stop='1563857810953'>
                    <name>When party2 answer call</name>
                    <title>When party2 answer call</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563857810954' status='passed' stop='1563857810957'>
                    <name>Then party2 enter connected state</name>
                    <title>Then party2 enter connected state</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563857811957' status='passed' stop='1563857811962'>
                    <name>Check party1 call list item = 3</name>
                    <title>Check party1 call list item = 3</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563857812966' status='passed' stop='1563857812993'>
                    <name>When party1 mute call</name>
                    <title>When party1 mute call</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563857812993' status='passed' stop='1563857813007'>
                    <name>When party2 play out tone with frequency 440</name>
                    <title>When party2 play out tone with frequency 440</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563857813007' status='passed' stop='1563857826059'>
                    <name>check party1 tone frequency</name>
                    <title>check party1 tone frequency</title>
                    <attachments/>
                    <steps>
                        <step start='1563857813008' status='passed' stop='1563857814016'>
                            <name>Then party1 start local recording</name>
                            <title>Then party1 start local recording</title>
                            <attachments/>
                            <steps/>
                        </step>
                        <step start='1563857824022' status='passed' stop='1563857825029'>
                            <name>When party1 stop local recording</name>
                            <title>When party1 stop local recording</title>
                            <attachments/>
                            <steps/>
                        </step>
                    </steps>
                </step>
                <step start='1563857826059' status='passed' stop='1563857826060'>
                    <name>check frequency 440 with stability 9 to be true</name>
                    <title>check frequency 440 with stability 9 to be true</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563857826060' status='passed' stop='1563857826070'>
                    <name>When party2 stop playing tone</name>
                    <title>When party2 stop playing tone</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563857826070' status='passed' stop='1563857826098'>
                    <name>When party1 unmute call</name>
                    <title>When party1 unmute call</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563857827103' status='passed' stop='1563857827158'>
                    <name>When party2 mute call</name>
                    <title>When party2 mute call</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563857827158' status='passed' stop='1563857827180'>
                    <name>When party1 play out tone with frequency 660</name>
                    <title>When party1 play out tone with frequency 660</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563857827180' status='passed' stop='1563857840238'>
                    <name>check party2 tone frequency</name>
                    <title>check party2 tone frequency</title>
                    <attachments/>
                    <steps>
                        <step start='1563857827180' status='passed' stop='1563857828193'>
                            <name>Then party2 start local recording</name>
                            <title>Then party2 start local recording</title>
                            <attachments/>
                            <steps/>
                        </step>
                        <step start='1563857838198' status='passed' stop='1563857839206'>
                            <name>When party2 stop local recording</name>
                            <title>When party2 stop local recording</title>
                            <attachments/>
                            <steps/>
                        </step>
                    </steps>
                </step>
                <step start='1563857840238' status='passed' stop='1563857840238'>
                    <name>check frequency 660 with stability 9 to be true</name>
                    <title>check frequency 660 with stability 9 to be true</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563857840238' status='passed' stop='1563857840251'>
                    <name>When party1 stop playing tone</name>
                    <title>When party1 stop playing tone</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563857840251' status='passed' stop='1563857840280'>
                    <name>When party2 unmute call</name>
                    <title>When party2 unmute call</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563857841284' status='passed' stop='1563857841377'>
                    <name>When party2 end call</name>
                    <title>When party2 end call</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563857842380' status='passed' stop='1563857842436'>
                    <name>When party2 end call</name>
                    <title>When party2 end call</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563857843441' status='passed' stop='1563857843504'>
                    <name>When party2 end call</name>
                    <title>When party2 end call</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1563857844508' status='passed' stop='1563857850207'>
                    <name>check party1 log</name>
                    <title>check party1 log</title>
                    <attachments>
                        <attachment title='party1-7692101e-9fbc-3228-af5c-00f7823cc50b.txt' source='ce33f12e-10ee-4a1b-b0f4-d1faa286f1b7-attachment.txt' type='text/plain' size='228947'/>
                    </attachments>
                    <steps/>
                </step>
                <step start='1563857850207' status='failed' stop='1563857855696'>
                    <name>check party1 log</name>
                    <title>check party1 log</title>
                    <attachments>
                        <attachment title='party1-7692101e-9fbc-3228-af5c-00f7823cc50b.txt' source='0f5d288a-427d-4136-8368-d3805332776b-attachment.txt' type='text/plain' size='228947'/>
                        <attachment title='party1-7692101e-9fbc-3228-af5c-00f7823cc50b.txt' source='2f3a1722-a134-4eef-8c5a-0b68c5516bb9-attachment.txt' type='text/plain' size='228947'/>
                        <attachment title='party2-fca0fb34-4b69-33ac-8554-b55fa39f8cf3.txt' source='d00f7f30-f9fd-4a6c-baa8-070e4cf62c3e-attachment.txt' type='text/plain' size='235722'/>
                        <attachment title='party3-73bc2b5d-5ff7-3242-8f3c-a250da03baf4.txt' source='7a9a2ab2-8c7b-4af1-a007-a595ecc2ba8c-attachment.txt' type='text/plain' size='58215'/>
                    </attachments>
                    <steps/>
                </step>
            </steps>
            <attachments/>
            <failure>
                <message>Error: expect(received).toBe(expected) // Object.is equality
                
                Expected: true
                Received: false</message>
                <stack-trace>Error: expect(received).toBe(expected) // Object.is equality
                
                Expected: true
                Received: false
                    at StepHelper.&lt;anonymous> (/Users/jayson.zhang/gitLab_workspace/Fiji-01/tests/telephony-sdk-test/helper/StepHelper.ts:816:22)
                    at step (/Users/jayson.zhang/gitLab_workspace/Fiji-01/tests/telephony-sdk-test/helper/StepHelper.ts:37:23)
                    at Object.next (/Users/jayson.zhang/gitLab_workspace/Fiji-01/tests/telephony-sdk-test/helper/StepHelper.ts:18:53)
                    at fulfilled (/Users/jayson.zhang/gitLab_workspace/Fiji-01/tests/telephony-sdk-test/helper/StepHelper.ts:9:58)
                    at process._tickCallback (internal/process/next_tick.js:68:7)</stack-trace>
            </failure>
            <description type='text'>support multiple call</description>
        </test-case>
        <test-case start='1563857855739' status='undefined' stop='1563857855739'>
            <name>[JPT-1971][P1][Yilia Hong] Make call failed when there are 9 calls</name>
            <title>[JPT-1971][P1][Yilia Hong] Make call failed when there are 9 calls</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
            <failure>
                <message>This test was disabled</message>
                <stack-trace>undefined</stack-trace>
            </failure>
        </test-case>
        <test-case start='1563857855739' status='undefined' stop='1563857855739'>
            <name>[JPT-1972][P1][Yilia Hong] Can receive incoming call when there is 8 call</name>
            <title>[JPT-1972][P1][Yilia Hong] Can receive incoming call when there is 8 call</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
            <failure>
                <message>This test was disabled</message>
                <stack-trace>undefined</stack-trace>
            </failure>
        </test-case>
        <test-case start='1563857855739' status='undefined' stop='1563857855739'>
            <name>[JPT-1971][P1][Yilia Hong] Can not receive incoming call when there are 9 calls</name>
            <title>[JPT-1971][P1][Yilia Hong] Can not receive incoming call when there are 9 calls</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
            <failure>
                <message>This test was disabled</message>
                <stack-trace>undefined</stack-trace>
            </failure>
        </test-case>
    </test-cases>
</ns2:test-suite>