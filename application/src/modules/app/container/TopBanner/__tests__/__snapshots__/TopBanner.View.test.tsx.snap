// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TopBannerView render should not display banner defined in data if priority is less than other banner [JPT-2531] 1`] = `
.c0 {
  position: relative;
  overflow: hidden;
}

.c0 > :not(:first-child) {
  display: none;
}

<TopBannerView>
  <styled.div>
    <StyledComponent
      forwardedClass={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": undefined,
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "
  position: relative;
  overflow: hidden;

  > :not(:first-child) {
    display: none;
  }
",
            ],
          },
          "displayName": "styled.div",
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <Container(NetworkBannerViewComponent)
          key="100"
        >
          <NetworkBannerViewComponent
            isShow={false}
            t={[Function]}
          />
        </Container(NetworkBannerViewComponent)>
        <Container(DndBannerViewComponent)
          key="200"
        >
          <DndBannerViewComponent
            currentUserId={0}
            handleClose={[Function]}
            handleUnblock={[Function]}
            isClosed={false}
            isDND={false}
            isShow={false}
            t={[Function]}
          />
        </Container(DndBannerViewComponent)>
      </div>
    </StyledComponent>
  </styled.div>
</TopBannerView>
`;

exports[`TopBannerView render should not render banner defined in data if priority is less than other banner [JPT-2531] 1`] = `
.c0 {
  position: relative;
  overflow: hidden;
}

.c0 > :not(:first-child) {
  display: none;
}

<TopBannerView>
  <styled.div>
    <StyledComponent
      forwardedClass={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": undefined,
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "
  position: relative;
  overflow: hidden;

  > :not(:first-child) {
    display: none;
  }
",
            ],
          },
          "displayName": "styled.div",
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <Container(NetworkBannerViewComponent)
          key="100"
        >
          <NetworkBannerViewComponent
            isShow={false}
            t={[Function]}
          />
        </Container(NetworkBannerViewComponent)>
        <Container(DndBannerViewComponent)
          key="200"
        >
          <DndBannerViewComponent
            currentUserId={0}
            handleClose={[Function]}
            handleUnblock={[Function]}
            isClosed={false}
            isDND={false}
            isShow={false}
            t={[Function]}
          />
        </Container(DndBannerViewComponent)>
      </div>
    </StyledComponent>
  </styled.div>
</TopBannerView>
`;
